{"ast":null,"code":"var _jsxFileName = \"/Users/Melecio/thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Home/Decks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, Switch, Route } from \"react-router-dom\";\nimport CreateDeckButton from \"./CreateDeckButton\";\nimport Deck from \"./../Deck/Deck\";\nimport Study from \"./../D\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Decks() {\n  _s();\n\n  const [Decks, setDecks] = useState([]);\n  const [Cards, setCards] = useState([]);\n  useEffect(() => {\n    const url = \"http://localhost:5000/decks\";\n    fetch(url).then(response => response.json()).then(response => {\n      // console.log(response);\n      setDecks(response);\n    });\n  }, []);\n  useEffect(() => {\n    const url = \"http://localhost:5000/cards\";\n    fetch(url).then(response => response.json()).then(response => {\n      // console.log(response);\n      setCards(response);\n    });\n  }, []); // creates deck listing for each deck\n\n  const allDecks = Decks.map((deck, index) => {\n    // filters cards for each deck\n    const deckCards = Cards.filter(card => card.deckId === deck.id);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: deck.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Cards: \", deckCards.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: deck.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/decks/${deck.id}`,\n                className: \"btn btn-secondary mr-1\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/decks/${deck.id}/study`,\n                className: \"btn btn-primary\",\n                children: \"Study\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/\",\n                className: \"btn btn-danger\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, deck.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(CreateDeckButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: allDecks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/decks/:deckId\",\n        children: /*#__PURE__*/_jsxDEV(Deck, {\n          decks: Decks,\n          cards: Cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Decks, \"29Mg/X6opBlSd7wJlSIFeJZNoYs=\");\n\n_c = Decks;\nexport default Decks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Decks\");","map":{"version":3,"sources":["/Users/Melecio/thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Home/Decks.js"],"names":["React","useState","useEffect","Link","Switch","Route","CreateDeckButton","Deck","Study","Decks","setDecks","Cards","setCards","url","fetch","then","response","json","allDecks","map","deck","index","deckCards","filter","card","deckId","id","name","length","description"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {Link, Switch, Route} from \"react-router-dom\";\nimport CreateDeckButton from \"./CreateDeckButton\";\nimport Deck from \"./../Deck/Deck\";\nimport Study from \"./../D\"\n\nfunction Decks() {\n\n  const [Decks, setDecks] = useState([]);\n  const [Cards, setCards] = useState([]);\n\n  useEffect(() => {\n    const url = \"http://localhost:5000/decks\";\n    fetch(url)\n      .then((response) => response.json())\n      .then((response) => {\n        // console.log(response);\n        setDecks(response);\n      });\n  }, []);\n\n  useEffect(() => {\n    const url = \"http://localhost:5000/cards\";\n    fetch(url)\n      .then((response) => response.json())\n      .then((response) => {\n        // console.log(response);\n        setCards(response);\n      });\n  }, []);\n    \n  // creates deck listing for each deck\n  const allDecks = Decks.map((deck, index) => {\n      // filters cards for each deck\n      const deckCards = Cards.filter(card => card.deckId === deck.id)\n      return (\n        <div className=\"col-sm-6\" key={deck.id}>\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <div className='d-flex justify-content-between'>\n              <h5 className=\"card-title\">{deck.name}</h5>\n              <p>Cards: {deckCards.length}</p>\n            </div>\n            <p className=\"card-text\">{deck.description}</p>\n            <div className=\"d-flex justify-content-between\">\n              <div>\n                <Link to={`/decks/${deck.id}`} className=\"btn btn-secondary mr-1\">View</Link>\n                <Link to={`/decks/${deck.id}/study`} className=\"btn btn-primary\">Study</Link>\n              </div>\n              <div>\n                <Link to={\"/\"} className=\"btn btn-danger\">Delete</Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      )\n    })\n\n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/\">\n          <CreateDeckButton />\n          <div className=\"row\">\n            {allDecks}\n          </div>\n        </Route>\n        <Route path=\"/decks/:deckId\">\n          <Deck decks={Decks} cards={Cards} />\n          {/* {console.log(Decks)} */}\n        </Route>\n      </Switch>\n    </>\n  )\n}\n\nexport default Decks;"]},"metadata":{},"sourceType":"module"}